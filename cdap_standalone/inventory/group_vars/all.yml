---

ansible_fqdn: "rafd004-mgt-01.cloud.in.guavus.com"
hdp_version: 3.1.0.0
hdp_build: 78

cdap_loadbalancer_vip: "192.168.134.233"
cluster_name: 'rafd004'
site_deployment_type: "HA"            #HA/NONHA
install_using_public_repos: "false"
cdap_master_nodes: "master-nodes"
cdap_management_nodes: "management-nodes"
raf_docker_registry: "artifacts.ggn.in.guavus.com:4245"
ambari_admin_user: 'admin'
ambari_admin_password: 'admin123'
cdap_properties_dir: "/opt/guavus/ambari-api/cdap/properties"
site_default_rpm_repo_host: "artifacts.ggn.in.guavus.com:80"
cdap_version: '5.1.204'
cdap_major_version: '5.1.204'
spark2_2_home: "/usr/hdp/{{ hdp_version }}-{{ hdp_build }}/spark2"
install_guavus_accelerator: true

#----------------------------------------
#         kerberos Config
# Below information is required for cdap 
# keytab and principal generation.
#----------------------------------------
krb_admin_principal: "gvsdevops/admin@GVS.GGN"
krb_admin_password: "4E47Qyjbed9GEaHs@"

#-------------------------
# Enable Security For CDAP
#-------------------------

is_authentication_enabled: true
is_authorization_enabled: true

#-----------------------------------------
# Enable Guavus Analytics Engine Services
#-----------------------------------------

cdap__ui_theme_name: 'afe'
cdap__ui_theme_file: 'ui/server/config/themes/{{cdap__ui_theme_name}}.json'
cdap__data_tx_max_timeout: 3600
cdap__data_tx_timeout: 3600



is_security_enabled: true                   # Set true to enable cdap security

#---------------------------
# Kerberos enabled on cluser
#---------------------------

is_kerberos_auth_enabled: true              # Set true to enable kerberos authorization

#---------------------
# Enable Authorization 
#---------------------

is_security_authorization_enabled: true     # Set true to enable authorization


#----------------------
# Enable Authentication
#----------------------
is_dashboard_ssl_disable_cert_check: true                                   # True to disable SSL certificate check from CDAP UI 
is_security_authentication_handler_debug: true                              
is_security_authentication_handler_useLdaps: true                           # True to enable use of LDAPS
is_security_authentication_handler_ldapsVerifyCertificate: false            # True to enable verification of ssl certificate used by LDAP

security_authentication_handler_hostname: "lab.openldap.com"
security_authentication_handler_port: "389"
security_authentication_handler_userBaseDn: "ou=People,dc=lab,dc=openldap,dc=com"
security_authentication_handler_userRdnAttribute: "uid"
security_authentication_handler_userObjectClass: "posixAccount"
security_authentication_handler_userIdAttribute: "uid"
security_authentication_handler_roleBaseDn: "dc=lab,dc=openldap,dc=com"
security_authentication_handler_roleNameAttribute: "cn"
security_authentication_handler_roleMemberAttribute: "memberUid"
security_authentication_handler_roleObjectClass: "posixGroup"                                                      
security_authentication_handler_bindDn: "cn=ldapadm,dc=lab,dc=openldap,dc=com"      # The distinguish Name to bind AD server
security_authentication_handler_bindPassword: root@123                                            # Password used to bind to AD server

#-------------------------------------------------------------
# SSL cert , SSL key , Truststore and Keystore configuration
# Enable below flags to use in-built provided truststore,
# keystore, ssl cert and key.
# THIS IS NOT RECOMMENDED FOR PRODUCTION.
#-------------------------------------------------------------
use_default_ssl_cert: true                 # Set true to use default ssl cert 
use_default_store: true                    # Set true to use default keystore

#----------------------------------------------------------
#            Configs for keystore and truststore
# Below Configs will exists on CDAP management node. Do not 
# change below config if use_default_store values is true 
# as it will auto generated by provisioner at given paths. 
#----------------------------------------------------------
security_auth_server_ssl_truststore_path: /etc/cdap/truststore.jks          # TrustStore file location 
security_auth_server_ssl_keystore_path: /etc/cdap/keystore.jks              # KeyStore file location
router_ssl_keystore_path: /etc/cdap/keystore.jks                            # KeyStore file location
security_auth_server_ssl_truststore_password: changeit                      # Truststore password
security_auth_server_ssl_keystore_password: changeit                        # KeyStore password
security_auth_server_ssl_keystore_keypassword: changeit                     # KeyStore Key password


#----------------------------------------------------------
#          Configs for SSL cert and key
# Below Configs will exists on CDAP management
# node. Do not change below config if use_default_ssl_cert
# is true as it will auto generated by provisioner at given 
# paths. 
#----------------------------------------------------------
dashboard_ssl_cert: /etc/cdap/cdap-ui-cert.pem                              # SSL cert file location
dashboard_ssl_key: /etc/cdap/cdap-ui-key.key                                # SSL key file location
router_ssl_keystore_password: changeit                               # KeyStore password
router_ssl_keystore_keypassword: changeit                            # KeyStore key password
# Common Config
# Below Configs are required to validate
# pr-requisites for CDAP security.
#----------------------------------------
hdfs__kerberos_keytab_path: '/etc/security/keytabs'                           # keytab path
hdfs__kerberos_keytab_filename: 'hdfs.headless.keytab'                        # hdfs keytab filename
ldap_cert_path: '/etc/openldap/certs/'                                  # LDAP certificate path
ldap_cert_name: 'default.crt'                                           # LDAP certificate name
ldap_cert_alias: "{{ansible_fqdn}}"                                     # LDAP certificate alias if any else leave as it is.
yarn_queue_name: 'default'                                              # Name of yarn queue that should exists.

#-----------------
# Validation Flags
#-----------------
check_kerberos: true                                                    # Enable this flag to test kerberos
check_store_path: true                                                  # Enable this flag to check existence of path
check_ssl_path: true                                                    # Enable this flag to check existence of path
check_keystore_truststore: true                                         # Enable this flag to verify keystore and trustore are valid
check_ldap_connection: true                                             # Enable this flag to check verify LDAP connection
check_yarn_queue: true                                                  # Enable this flag to check if queue name exists in yarn
check_services: true                                                    # Enable this flag to check to required services are running
                         


