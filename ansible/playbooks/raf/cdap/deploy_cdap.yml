---

- name: Retrieve facts all host
  hosts:
    - all
  gather_facts: true
  any_errors_fatal: True
  tags:
    - 'always'
  tasks: []

- name: "Set raf docker registry"
  hosts:
    - management-nodes
  tags:
    - always
  tasks:
    - set_fact:
        raf_docker_registry: '{{ docker_default_registry }}'
      when: site_connectivity == 'offline'
    - debug:
        msg: "Raf docker registry is: {{ raf_docker_registry }}"
    - set_fact:
        site_floating_ip:
          ip: "{{ hostvars[groups['management-nodes'][0]]['ansible_default_ipv4']['address'] }}"
      when: site_deployment_type == 'NONHA'
    - debug:
        msg: "Setup type is NONHA and site_floating_ip.ip is: {{ site_floating_ip.ip }}"
      when: site_deployment_type == 'NONHA'
 
- name: Deploy CDAP to Ambari
  hosts:
    - all:!loadbalancer-nodes
  any_errors_fatal: true
  vars_files:
    - "../../../playbooks/hortonworks/playbooks/group_vars/all"
    - "../../../playbooks/hortonworks/playbooks/group_vars/ambari-server"
  vars:
    - cdap_cluster_name: "{{ cluster_name  }}"
    - cdap_master_nodes: "master-nodes"
    - cdap_management_nodes: "management-nodes"
    - cdap_loadbalancer_vip: "{{ site_floating_ip.ip }}"
  roles:
    - {role: raf/cdap/deploy}

- name: Deploy CDAP-UI Configs
  hosts:
    - all:!loadbalancer-nodes
  any_errors_fatal: true
  vars_files:
    - "../../../playbooks/hortonworks/playbooks/group_vars/all"
    - "../../../playbooks/hortonworks/playbooks/group_vars/ambari-server"
  vars:
    - cdap_cluster_name: "{{ cluster_name  }}"
    - cdap_master_nodes: "master-nodes"
    - cdap_management_nodes: "management-nodes"
    - cdap_loadbalancer_vip: "{{ site_floating_ip.ip }}"
  roles:
    - {role: raf/cdap-ui/deploy}

- name: 'Add all cdap machines in haproxy'
  hosts:
    - loadbalancer-nodes
  any_errors_fatal: true
  vars:
    - cdap_loadbalancer_vip: "{{ site_floating_ip.ip }}"
  tasks:
    - blockinfile:
        dest: /etc/haproxy/haproxy.cfg
        backup: yes
        marker: "# {mark} CDAP MANAGED BLOCK"
        block: |
           listen CDAP_11011
             bind {{ cdap_loadbalancer_vip }}:11011
             mode  http
             balance  roundrobin
             appsession JSESSIONID len 1024 timeout 1h request-learn
             option forwardfor
             {% for host in groups['master-nodes'] %}server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:11011
             {%- if loop.first %} check
             {% else %}  check
             {% endif -%}
             {% endfor %}
      when: inventory_hostname in groups['loadbalancer-nodes']

- name: "Include playbook only if the condition is true"
  include: ../cdap-security-precheck/deploy/main.yml
  when: is_authentication_enabled | bool

- name: "Include playbook only if the condition is true"
  include: ../cdap-perimeter-security/deploy/main.yml
  when: is_authentication_enabled | bool

- name: "Include playbook only if the condition is true"
  include: ../cdap-ranger-auth/deploy/main.yml
  when: 
    - is_authentication_enabled | bool
    - is_authorization_enabled | bool
